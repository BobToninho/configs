// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "ctrl+shift+backspace",
		"command": "editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+numpad_divide",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+numpad_divide",
		"command": "editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_2",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+down",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+up",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_6",
		"command": "editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_6",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+w",
		"command": "editor.action.toggleWordWrap"
	},
	{
		"key": "alt+z",
		"command": "-editor.action.toggleWordWrap"
	},
	{
		"key": "ctrl+r",
		"command": "editor.action.reindentselectedlines"
	},
	{
		"key": "ctrl+u",
		"command": "editor.action.transformToUppercase"
	},
	{
		"key": "ctrl+oem_4",
		"command": "editor.togglequotes"
	},
	{
		"key": "ctrl+oem_7",
		"command": "-editor.togglequotes"
	},
	{
		"key": "ctrl+shift+alt+k",
		"command": "-bracketeer.swapBrackets"
	},
	{
		"key": "ctrl+shift+alt+h",
		"command": "-bracketeer.selectBracketContent"
	},
	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.showAllSymbols"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},
	{
		"key": "ctrl+shift+alt+0",
		"command": "-bracketeer.selectQuotesContent"
	},
	{
		"key": "ctrl+shift+b",
		"command": "-workbench.action.tasks.build"
	},
	{
		"key": "ctrl+shift+b",
		"command": "workbench.action.tasks.runTask"
	},
	{
		"key": "ctrl+k",
		"command": "editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.terminal.kill"
	},
	{
		"key": "ctrl+alt+f",
		"command": "workbench.view.search",
		"when": "!searchViewletVisible"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.view.search",
		"when": "!searchViewletVisible"
	},
	{
		"key": "ctrl+shift+g",
		"command": "workbench.view.scm",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "-workbench.view.scm",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	}
]
